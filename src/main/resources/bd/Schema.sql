CREATE TABLE IF NOT EXISTS users
(
    id    BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name  VARCHAR(255)                            NOT NULL,
    email VARCHAR(512)                            NOT NULL,
    CONSTRAINT pk_users PRIMARY KEY (id),
    CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
    );

CREATE TABLE IF NOT EXISTS category
(
    id    BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(255) UNIQUE,
    CONSTRAINT pk_category PRIMARY KEY (id)
    );

CREATE TABLE IF NOT EXISTS events
(
    id    BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    annotation  VARCHAR(255)                      NOT NULL,
    confirmed_requests INTEGER,
    description VARCHAR(512)                      NOT NULL,
    event_date TIMESTAMP,
    created_on TIMESTAMP,
    is_paid BOOLEAN                               NOT NULL,
    participant_limit INTEGER                     NOT NULL,
    published_on TIMESTAMP,
    request_moderation BOOLEAN                    NOT NULL,
    state VARCHAR(512),
    title VARCHAR(512)                            NOT NULL,
    views INTEGER,
    category_id INTEGER REFERENCES category(id),
    initiator_id INTEGER REFERENCES users(id),
    CONSTRAINT pk_events PRIMARY KEY (id)
    );

CREATE TABLE IF NOT EXISTS compilations
(
    id    BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    title VARCHAR(512)                            NOT NULL,
    is_pinned BOOLEAN                             NOT NULL,
    event_id INTEGER REFERENCES events(id),
    CONSTRAINT pk_compilations PRIMARY KEY (id)
    );

CREATE TABLE IF NOT EXISTS compilations_events
(
    compilation_id INTEGER REFERENCES compilations(id) NOT NULL,
    event_id INTEGER REFERENCES events(id) NOT NULL,
    CONSTRAINT pk_compilation_events PRIMARY KEY (compilation_id, event_id)
    );

CREATE TABLE IF NOT EXISTS participation_request
(
    id        BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created   TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    event     BIGINT                                  NOT NULL,
    requester BIGINT                                  NOT NULL,
    status    VARCHAR(100)                            NOT NULL,
    CONSTRAINT pk_participation_request PRIMARY KEY (id),
    CONSTRAINT FK_PR_ON_EVENT FOREIGN KEY (event) REFERENCES events (id),
    CONSTRAINT FK_PR_ON_USER FOREIGN KEY (requester) REFERENCES users (id)
    );